import { prisma } from "@postgresql/prisma";
import { InlineKeyboard } from "gramio";
import { notificationNews, notificationSchedule } from "../data/menu";

export const settingsKeyboard = async (id: number) => {
	const user = await prisma.users.findFirst({
		where: {
			telegram_id: id,
		},
		include: {
			setting: true,
		},
	});

	if (!user?.setting) throw Error("–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–∏—Å–∞");

	return new InlineKeyboard()
		.text(
			`${user.setting.notification_news ? `üîï –í—ã–∫–ª—é—á–∏—Ç—å` : `üîî –í–∫–ª—é—á–∏—Ç—å`} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ—Å—Ç—è—Ö`,
			notificationNews.pack({
				news: !user.setting.notification_news,
			}),
		)
		.row()
		.text(
			`${user.setting.notification_schedule ? `üîï –í—ã–∫–ª—é—á–∏—Ç—å` : `üîî –í–∫–ª—é—á–∏—Ç—å`} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏`,
			notificationSchedule.pack({
				schedule: !user.setting.notification_schedule,
			}),
		);
};
