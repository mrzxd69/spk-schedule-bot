
import { register } from '@postgresql/abstractions/register';

import {
    selectTeacher
} from "@keyboards/data/selects";
import { type TBot } from '@bot/index';
import { bold, format } from 'gramio';
import { selectLessonsTeacher } from '@src/database/postgresql/abstractions/select';
import { scheduleStartTeacher } from '@bot/keyboards/buttons/start';




export default (bot: TBot) =>
    bot
        .callbackQuery(selectTeacher, async (ctx) => {
            await register(ctx.from.id, null, null, ctx.queryData.initials);

            await ctx.editText(format`üéâ ${bold("–û—Ç–ª–∏—á–Ω–æ!")}\n–¢–µ–ø–µ—Ä—å –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.`);

            const lessons = await selectLessonsTeacher(ctx.queryData.initials, false);

            let text = lessons.map(lesson => `‚Ä¢ ${lesson.count} –ø–∞—Ä–∞:\n –ì—Ä—É–ø–ø–∞: ${lesson.group}\n –ö–∞–±–∏–Ω–µ—Ç: ${lesson.room}\n\n`).join('');

            return ctx.send("üéâ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ <b>—Å–µ–≥–æ–¥–Ω—è</b>:" + "\n\n" + text, {
                reply_markup: scheduleStartTeacher(ctx.queryData.initials, false),
                parse_mode: "HTML"
            });
        });