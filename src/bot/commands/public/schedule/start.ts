import type { TBot } from "@bot/index";
import { scheduleStart } from "@bot/keyboards/buttons/start";
import { scheduleStart as scheduleStartData } from "@bot/keyboards/data/schedule";
import { selectLessons } from '@postgresql/abstractions/select';
import { replaceRoom } from "@src/shared/utils/schedule";

export default (bot: TBot) => {
    bot.callbackQuery(scheduleStartData, async ctx => {
        const { group, tomorrow } = ctx.queryData;

        const lessons = await selectLessons(group, tomorrow);

        let text = '';

        for(const lesson of lessons) {
            text = replaceRoom(text, lesson);
        }

        const isTomorrow = tomorrow ? '–∑–∞–≤—Ç—Ä–∞' : '—Å–µ–≥–æ–¥–Ω—è';
        const isEmptyText = text.includes("–ü–∞—Ä–∞") ? text : "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç\n\n";

        await ctx.editText(`üéâ –ì—Ä—É–ø–ø–∞: <b>${group}</b>\nüóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ ${isTomorrow}:\n\n${isEmptyText}‚ö†Ô∏è –£—á–∏—Ç—ã–≤–∞–π—Ç–µ —Ä–∏—Å–∫ –æ—à–∏–±–∫–∏ –±–æ—Ç–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å –∫–∞–Ω–∞–ª–∞!`, {
            parse_mode: "HTML",
        });

        await ctx.editReplyMarkup(scheduleStart(group, tomorrow));
    })
}